<beast version='2.0' namespace='beast.app.beauti:beast.core:beast.evolution.branchratemodel:beast.evolution.speciation:beast.evolution.tree.coalescent:beast.core.util:beast.evolution.nuc:beast.evolution.operators:beast.evolution.sitemodel:beast.evolution.substitutionmodel:beast.evolution.likelihood:beast.evolution:beast.math.distributions'>

    <mergewith point='misc' fragment="@TreeOperators"/>

    <mergewith point='treePriorTemplates'>

        <subtemplate id='TimTam Model' class='timtam.TimTam' mainid='TimTam.t:$(n)'>

            <![CDATA[

            <!-- Prior distribution -->
            <plugin spec='timtam.TimTam' id="TimTam.t:$(n)" tree="@Tree.t:$(n)" parameterisation="canonical">
                <parameter name='mu' id='TTRecoveryRate.t:$(n)' value='0.046' estimate='false'/>
                <parameter name='lambda' id='TTBirthRate.t:$(n)' value='0.75' estimate='true'/>
                <parameter name='psi' id='TTSamplingRate.t:$(n)' value='0.025' estimate='true'/>
                <parameter name='nu' id='TTNuProb.t:$(n)' value='0.075' estimate='true'/>
                <parameter name='originTime' id='TTOriginTime.t:$(n)' value='100.0' estimate='false'/>
                <parameter name='disasterTimes' id='TTDisasterTimes.t:$(n)' value='0.0' estimate='false'/>
                <parameter name='disasterSizes' id='TTDisasterSizes.t:$(n)' spec='parameter.IntegerParameter' value='0' estimate='false'/>
                <parameter name='historyTimes' id='TTHistoryTimes.t:$(n)' value='0.0' estimate='false'/>
                <parameter name='historySizes' id='TTHistorySizes.t:$(n)' spec='parameter.IntegerParameter' value='0' estimate='true'/>
            </plugin>

            <prior
                id="TTBirthRatePrior.t:$(n)"
                x="@TTBirthRate.t:$(n)">
                <distr spec="beast.math.distributions.LogNormalDistributionModel">
                    <parameter name="M" value="-2.0" estimate="false"/>
                    <parameter name="S" value="1.0" estimate="false"/>
                </distr>
            </prior>

            <prior
                id="TTSamplingRatePrior.t:$(n)"
                x="@TTSamplingRate.t:$(n)">
                <distr spec="beast.math.distributions.LogNormalDistributionModel">
                    <parameter name="M" value="-3.0" estimate="false"/>
                    <parameter name="S" value="1.0" estimate="false"/>
                </distr>
            </prior>

            <prior
                id="TTNuProbPrior.t:$(n)"
                x="@TTNuProb.t:$(n)">
                <distr spec="beast.math.distributions.Beta">
                    <parameter name="alpha" value="2.0" estimate="false"/>
                    <parameter name="beta" value="10.0" estimate="false"/>
                </distr>
            </prior>

            <prior
                id="TTHistorySizesPrior.t:$(n)"
                x="@TTHistorySizes.t:$(n)">
                <distr spec="beast.math.distributions.Uniform" lower="0.0" upper="10000.0">
                </distr>
            </prior>

	          <!-- Parameter operators -->

	                   <operator
                       id='TTBirthRateScaler.t:$(n)'
                       spec='ScaleOperator'
                       scaleFactor=".9"
                       weight="1.0"
                       parameter="@TTBirthRate.t:$(n)"/>

                     <operator
                       id="TTBirthRateWalk.t:$(n)"
                       spec="RealRandomWalkOperator"
                       windowSize="0.01"
                       parameter="@TTBirthRate.t:$(n)"
                       weight="1.0" />

	                   <operator
                       id='TTSamplingRateScaler.t:$(n)'
                       spec='ScaleOperator'
                       scaleFactor=".9"
                       weight="1.0"
                       parameter="@TTSamplingRate.t:$(n)"/>

                     <operator
                       id="TTSamplingRateWalk.t:$(n)"
                       spec="RealRandomWalkOperator"
                       windowSize="0.01"
                       parameter="@TTSamplingRate.t:$(n)"
                       weight="1.0" />

                     <operator
                       id="TTUpdownBS.t:$(n)"
                       spec="UpDownOperator"
                       scaleFactor="0.9"
                       weight="2.0">
                       <up idref="TTBirthRate.t:$(n)" />
                       <down idref="TTSamplingRate.t:$(n)" />
                     </operator>

                     <operator
                       id="TTNuProbScaler.t:$(n)"
                       spec="ScaleOperator"
                       scaleFactor="0.9"
                       parameter="@TTNuProb.t:$(n)"
                       weight="1.0" />

                     <operator
                       id="TTNuProbWalk.t:$(n)"
                       spec="RealRandomWalkOperator"
                       windowSize="0.01"
                       parameter="@TTNuProb.t:$(n)"
                       weight="1.0" />


                     <operator
                       id="TTHistorySizesWalk.t:$(n)"
                       spec="IntRandomWalkOperator"
                       windowSize="20"
                       parameter="@TTHistorySizes.t:$(n)"
                       weight="3.0" />

            ]]>


            <connect srcID='TimTam.t:$(n)' targetID='prior' inputName='distribution' if='inposterior(TimTam.t:$(n)) and inlikelihood(Tree.t:$(n)) and Tree.t:$(n)/estimate=true' />
            <connect srcID='RandomTree.t:$(n)' targetID='mcmc' inputName='init' if='inposterior(Tree.t:$(n))' />

            <connect srcID='TTBirthRatePrior.t:$(n)' targetID='prior' inputName='distribution' if='inposterior(TimTam.t:$(n)) and TTBirthRate.t:$(n)/estimate=true'>prior on the birth rate parameter</connect>
            <connect srcID='TTSamplingRatePrior.t:$(n)' targetID='prior' inputName='distribution' if='inposterior(TimTam.t:$(n)) and TTSamplingRate.t:$(n)/estimate=true'>prior on sampling rate parameter</connect>
            <connect srcID='TTNuProbPrior.t:$(n)' targetID='prior' inputName='distribution' if='inposterior(TimTam.t:$(n)) and TTNuProb.t:$(n)/estimate=true'>prior on probability of being sampled in a scheduled unsequenced event</connect>
            <connect srcID='TTHistorySizesPrior.t:$(n)' targetID='prior' inputName='distribution' if='inposterior(TimTam.t:$(n)) and TTHistorySizes.t:$(n)/estimate=true'>BE VERY CAREFUL WITH THIS! the prior on the prevalence at the history times</connect>

            <connect srcID='TTBirthRateScaler.t:$(n)' targetID='mcmc' inputName='operator' if='inposterior(TimTam.t:$(n)) and TTBirthRate.t:$(n)/estimate=true'/>
            <connect srcID='TTBirthRateWalk.t:$(n)' targetID='mcmc' inputName='operator' if='inposterior(TimTam.t:$(n)) and TTBirthRate.t:$(n)/estimate=true'/>
            <connect srcID='TTSamplingRateScaler.t:$(n)' targetID='mcmc' inputName='operator' if='inposterior(TimTam.t:$(n)) and TTSamplingRate.t:$(n)/estimate=true'/>
            <connect srcID='TTSamplingRateWalk.t:$(n)' targetID='mcmc' inputName='operator' if='inposterior(TimTam.t:$(n)) and TTSamplingRate.t:$(n)/estimate=true'/>
            <connect srcID='TTUpdownBS.t:$(n)' targetID='mcmc' inputName='operator' if='inposterior(TimTam.t:$(n)) and TTBirthRate.t:$(n)/estimate=true and TTSamplingRate.t:$(n)/estimate=true'/>
            <connect srcID='TTNuProbScaler.t:$(n)' targetID='mcmc' inputName='operator' if='inposterior(TimTam.t:$(n)) and TTNuProb.t:$(n)/estimate=true'/>
            <connect srcID='TTNuProbWalk.t:$(n)' targetID='mcmc' inputName='operator' if='inposterior(TimTam.t:$(n)) and TTNuProb.t:$(n)/estimate=true'/>
            <connect srcID='TTHistorySizesWalk.t:$(n)' targetID='mcmc' inputName='operator' if='inposterior(TimTam.t:$(n)) and TTHistorySizes.t:$(n)/estimate=true'/>

            <plate var='p' range='TTBirthRate,TTSamplingRate,TTNuProb,TTHistorySizes'>
                <connect srcID='$(p).t:$(n)' targetID='state' inputName='stateNode' if='inposterior(TimTam.t:$(n)) and $(p).t:$(n)/estimate=true' />
                <connect srcID='$(p).t:$(n)' targetID='tracelog' inputName='log' if='inposterior(TimTam.t:$(n)) and $(p).t:$(n)/estimate=true' />
            </plate>

			      <plate fragment="TreeOperators" var="m" range="TimTam"/>
        </subtemplate>
    </mergewith>

</beast>
