<beast version='2.0' namespace='beast.app.beauti:beast.core:beast.evolution.branchratemodel:beast.evolution.speciation:beast.evolution.tree.coalescent:beast.core.util:beast.evolution.nuc:beast.evolution.operators:beast.evolution.sitemodel:beast.evolution.substitutionmodel:beast.evolution.likelihood:beast.evolution:beast.math.distributions'>

    <mergewith point='misc' fragment="@TreeOperators"/>

    <mergewith point='treePriorTemplates'>

        <subtemplate id='TimTam Time Series Model' class='timtam.TimTam' mainid='TimTamTimeSeries.t:$(n)'>

            <![CDATA[

            <!-- Prior distribution -->
            <plugin spec='timtam.TimTam' id="TimTamTimeSeries.t:$(n)" tree="@Tree.t:$(n)" parameterisation="timeSeriesR0">
                <parameter name='r0' id='r0.t:$(n)' value='1.850' estimate='true' lower='0.0'/>
                <parameter name='sigma' id='netRemovalRate.t:$(n)' value='0.100' estimate='false' lower='0.0'/>
                <parameter name='propPsi' id='propPsi.t:$(n)' value='0.100' estimate='true' lower='0.0' upper='1.0'/>
                <parameter name='propTimeSeries' id='propTS.t:$(n)' value='0.400' estimate='true' lower='0.0' upper='1.0'/>
                <parameter name='originTime' id='originTime.t:$(n)' value='100.0' estimate='false'/>
                <parameter name='disasterTimes' id='disasterTimes.t:$(n)' value='2.0 1.0 0.0' estimate='false'/>
                <parameter name='disasterSizes' id='disasterSizes.t:$(n)' spec='parameter.IntegerParameter' value='1 1 2' estimate='false'/>
                <parameter name='historyTimes' id='historyTimes.t:$(n)' value='0.0' estimate='false'/>
                <parameter name='historySizes' id='historySizes.t:$(n)' spec='parameter.IntegerParameter' value='0' estimate='true'/>
            </plugin>

            <prior
                id="r0Prior.t:$(n)"
                x="@r0.t:$(n)">
                <distr spec="beast.math.distributions.Normal">
                    <parameter name="mean" value="2.0" estimate="false"/>
                    <parameter name="sigma" value="2.0" estimate="false"/>
                </distr>
            </prior>

            <prior
                id="netRemovalRatePrior.t:$(n)"
                x="@netRemovalRate.t:$(n)">
                <distr spec="beast.math.distributions.LogNormalDistributionModel">
                    <parameter name="M" value="-1.0" estimate="false"/>
                    <parameter name="S" value="1.0" estimate="false"/>
                </distr>
            </prior>

            <prior
                id="propPsiPrior.t:$(n)"
                x="@propPsi.t:$(n)">
                <distr spec="beast.math.distributions.Beta">
                    <parameter name="alpha" value="2.0" estimate="false"/>
                    <parameter name="beta" value="2.0" estimate="false"/>
                </distr>
            </prior>

            <prior
                id="propTimeSeriesPrior.t:$(n)"
                x="@propTS.t:$(n)">
                <distr spec="beast.math.distributions.Beta">
                    <parameter name="alpha" value="2.0" estimate="false"/>
                    <parameter name="beta" value="2.0" estimate="false"/>
                </distr>
            </prior>

            <prior
                id="historySizesPrior.t:$(n)"
                x="@historySizes.t:$(n)">
                <distr spec="beast.math.distributions.Uniform" lower="0.0" upper="10000.0">
                </distr>
            </prior>

	          <!-- Parameter operators -->

	                   <operator
                       id='r0Scaler.t:$(n)'
                       spec='ScaleOperator'
                       scaleFactor=".9"
                       weight="1.0"
                       parameter="@r0.t:$(n)"/>

                     <operator
                       id="r0Walk.t:$(n)"
                       spec="RealRandomWalkOperator"
                       windowSize="0.01"
                       parameter="@r0.t:$(n)"
                       weight="1.0" />

	                   <operator
                       id='netRemovalRateScaler.t:$(n)'
                       spec='ScaleOperator'
                       scaleFactor=".9"
                       weight="1.0"
                       parameter="@netRemovalRate.t:$(n)"/>

                     <operator
                       id="netRemovalRateWalk.t:$(n)"
                       spec="RealRandomWalkOperator"
                       windowSize="0.01"
                       parameter="@netRemovalRate.t:$(n)"
                       weight="1.0" />

                     <operator
                       id="updownBS.t:$(n)"
                       spec="UpDownOperator"
                       scaleFactor="0.9"
                       weight="2.0">
                       <up idref="r0.t:$(n)" />
                       <down idref="netRemovalRate.t:$(n)" />
                     </operator>

                     <operator
                       id="propPsiScaler.t:$(n)"
                       spec="ScaleOperator"
                       scaleFactor="0.9"
                       parameter="@propPsi.t:$(n)"
                       weight="1.0" />

                     <operator
                       id="propPsiWalk.t:$(n)"
                       spec="RealRandomWalkOperator"
                       windowSize="0.01"
                       parameter="@propPsi.t:$(n)"
                       weight="1.0" />

                     <operator
                       id="propTimeSeriesScaler.t:$(n)"
                       spec="ScaleOperator"
                       scaleFactor="0.9"
                       parameter="@propTS.t:$(n)"
                       weight="1.0" />

                     <operator
                       id="propTimeSeriesWalk.t:$(n)"
                       spec="RealRandomWalkOperator"
                       windowSize="0.01"
                       parameter="@propTS.t:$(n)"
                       weight="1.0" />

                     <operator
                       id="historySizesWalk.t:$(n)"
                       spec="IntRandomWalkOperator"
                       windowSize="20"
                       parameter="@historySizes.t:$(n)"
                       weight="3.0" />

                     <log
                       id="TimTamLogger.t:$(n)"
                       spec="timtam.TimTamLogger"
                       timtam="@TimTamTimeSeries.t:$(n)" />

            ]]>


            <connect srcID='TimTamTimeSeries.t:$(n)' targetID='prior' inputName='distribution' if='inposterior(TimTamTimeSeries.t:$(n)) and inlikelihood(Tree.t:$(n)) and Tree.t:$(n)/estimate=true' />
            <connect srcID='RandomTree.t:$(n)' targetID='mcmc' inputName='init' if='inposterior(Tree.t:$(n))' />

            <connect srcID='r0Prior.t:$(n)' targetID='prior' inputName='distribution' if='inposterior(TimTamTimeSeries.t:$(n)) and r0.t:$(n)/estimate=true and TimTamTimeSeries.t:$(n)/parameterisation=timeSeriesR0'>prior on R-naught</connect>
            <connect srcID='netRemovalRatePrior.t:$(n)' targetID='prior' inputName='distribution' if='inposterior(TimTamTimeSeries.t:$(n)) and netRemovalRate.t:$(n)/estimate=true and TimTamTimeSeries.t:$(n)/parameterisation=timeSeriesR0'>prior on the (approximate) net removal rate</connect>
            <connect srcID='propPsiPrior.t:$(n)' targetID='prior' inputName='distribution' if='inposterior(TimTamTimeSeries.t:$(n)) and propPsi.t:$(n)/estimate=true and TimTamTimeSeries.t:$(n)/parameterisation=timeSeriesR0'>prior on the proportion sequenced</connect>
            <connect srcID='propTimeSeriesPrior.t:$(n)' targetID='prior' inputName='distribution' if='inposterior(TimTamTimeSeries.t:$(n)) and propTS.t:$(n)/estimate=true and TimTamTimeSeries.t:$(n)/parameterisation=timeSeriesR0'>prior on the proportion in the time series</connect>
            <connect srcID='historySizesPrior.t:$(n)' targetID='prior' inputName='distribution' if='historySizes.t:$(n)/estimate=true'>BE VERY CAREFUL! the prevalence at the history times</connect>

            <connect srcID='r0Scaler.t:$(n)' targetID='mcmc' inputName='operator' if='inposterior(TimTamTimeSeries.t:$(n)) and r0.t:$(n)/estimate=true and TimTamTimeSeries.t:$(n)/parameterisation=timeSeriesR0'/>
            <connect srcID='r0Walk.t:$(n)' targetID='mcmc' inputName='operator' if='inposterior(TimTamTimeSeries.t:$(n)) and r0.t:$(n)/estimate=true and TimTamTimeSeries.t:$(n)/parameterisation=timeSeriesR0'/>
            <connect srcID='netRemovalRateScaler.t:$(n)' targetID='mcmc' inputName='operator' if='inposterior(TimTamTimeSeries.t:$(n)) and netRemovalRate.t:$(n)/estimate=true and TimTamTimeSeries.t:$(n)/parameterisation=timeSeriesR0'/>
            <connect srcID='netRemovalRateWalk.t:$(n)' targetID='mcmc' inputName='operator' if='inposterior(TimTamTimeSeries.t:$(n)) and netRemovalRate.t:$(n)/estimate=true and TimTamTimeSeries.t:$(n)/parameterisation=timeSeriesR0'/>
            <connect srcID='updownBS.t:$(n)' targetID='mcmc' inputName='operator' if='inposterior(TimTamTimeSeries.t:$(n)) and r0.t:$(n)/estimate=true and netRemovalRate.t:$(n)/estimate=true and TimTamTimeSeries.t:$(n)/parameterisation=timeSeriesR0'/>
            <connect srcID='propPsiScaler.t:$(n)' targetID='mcmc' inputName='operator' if='inposterior(TimTamTimeSeries.t:$(n)) and propPsi.t:$(n)/estimate=true and TimTamTimeSeries.t:$(n)/parameterisation=timeSeriesR0'/>
            <connect srcID='propPsiWalk.t:$(n)' targetID='mcmc' inputName='operator' if='inposterior(TimTamTimeSeries.t:$(n)) and propPsi.t:$(n)/estimate=true and TimTamTimeSeries.t:$(n)/parameterisation=timeSeriesR0'/>
            <connect srcID='propTimeSeriesScaler.t:$(n)' targetID='mcmc' inputName='operator' if='inposterior(TimTamTimeSeries.t:$(n)) and propTS.t:$(n)/estimate=true and TimTamTimeSeries.t:$(n)/parameterisation=timeSeriesR0'/>
            <connect srcID='propTimeSeriesWalk.t:$(n)' targetID='mcmc' inputName='operator' if='inposterior(TimTamTimeSeries.t:$(n)) and propTS.t:$(n)/estimate=true and TimTamTimeSeries.t:$(n)/parameterisation=timeSeriesR0'/>
            <connect srcID='historySizesWalk.t:$(n)' targetID='mcmc' inputName='operator' if='historySizes.t:$(n)/estimate=true'/>

            <connect srcID='TimTamLogger.t:$(n)' targetID='tracelog' inputName='log' if='inposterior(TimTamTimeSeries.t:$(n))' />

            <!-- This connection is specified outside of the plate because otherwise it does not seem to work. -->
            <connect srcID='historySizes.t:$(n)' targetID='state' inputName='stateNode' if='historySizes.t:$(n)/estimate=true' />
            <connect srcID='historySizes.t:$(n)' targetID='tracelog' inputName='log' if='historySizes.t:$(n)/estimate=true' />

            <plate var='p' range='r0,netRemovalRate,propPsi,propTS'>
                <connect srcID='$(p).t:$(n)' targetID='state' inputName='stateNode' if='inposterior(TimTamTimeSeries.t:$(n)) and $(p).t:$(n)/estimate=true' />
                <connect srcID='$(p).t:$(n)' targetID='tracelog' inputName='log' if='inposterior(TimTamTimeSeries.t:$(n)) and $(p).t:$(n)/estimate=true' />
            </plate>

			      <plate fragment="TreeOperators" var="m" range="TimTamTimeSeries"/>
        </subtemplate>
    </mergewith>

</beast>
