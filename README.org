#+title: TimTam

This repository is an attempt to implement the [[https://github.com/aezarebski/timtam][TimTam]] likelihood as a BEAST2
package. As a first pass we will only consider "unscheduled" data since this is
easier and is still useful.

* Remaining tasks and open problems

1. [ ] Implement a negative binomial distribution class: =NegativeBinomial=.
   - Since this is not a "distribution" in the sense meant by
     =beast.math.distributions= it should not be implemented as such a class.
   - Since it is only going to be used by the =TimTam= class it should be made
     as a subclass.
   - It needs to implement the special case of a degenerate distribution
     concentrated on zero.
   - Need to store both the mean/variance and r/p parameters. Probably wise to
     use logarithms here to avoid potential numerical errors.
   - Need the PGF and its partial derivatives (again in logarithmic values for
     safety).
2. [ ] Finish the implementation of the likelihood which is currently blocked
   because there isn't a negative binomial distribution.
3. [ ] Move the code in =Demo.java= to a proper testing framework and sketch out
   some examples to test the likelihood with.
4. [ ] Figure out how to return additional data from the [[*=TimTam=]] class when
   running MCMC. This should be incorporated into an example too.
5. [ ] Set up a BEAUTi template.

* Classes

Here is a description of the classes that are provided by the package.

** =beast.evolution.speciation=

*** =TimTam=

This class extends the =TreeDistribution= and implements the tree prior that we
care about. It uses the [[*=TreeWithPointProcess=]] class to help it navigate the
data.

** =beast.evolution.tree.birthdeath=

*** =EventType=

This class describes the kinds of events that can be observed under the TimTam
likelihood.

*** =TreeWithPointProcess=

This class extends the =CalculationNode= and provides functionality for
computing the times between observed events. This requires a tree, the origin
time and a =TraitSet= which is what we use to describe unsequenced observations.
