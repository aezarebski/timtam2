#+title: TimTam

This repository is an attempt to implement the [[https://github.com/aezarebski/timtam][TimTam]] likelihood as a BEAST2
package. There is a [[*Vignette][vignette]] demonstrating how to use this.

* Remaining tasks and open problems

1. AVOID USING THE SAME PACKAGE PATHS!
2. Re-run the vignettes using XML generated by Beauti rather than the hand
   crafted versions currently given.
3. Use proper dates on the nodes and point process to avoid needing to
   pre-compute these for the XML
   - The [[https://cran.r-project.org/web/packages/phangorn/index.html][phangorn]] package can simulate sequences on a tree.
   - There is a Taming the Beast [[https://taming-the-beast.org/tutorials/Molecular-Dating-Tutorial/][tutorial]] which looks at dates on nodes.
4. Include the capability to parameterise this in terms of \(R_{0}\).
5. Support heterogeneous rates
6. Include support for occurrence times in Beauti.

* Vignette

- [[file:./doc/vignettes/fixed-tree-with-rho/README.org][Fixed tree with \(\rho\)-sample]]
- [[file:./doc/vignettes/estimated-tree-with-rho/README.org][Estimated tree with \(\rho\)-sample]]
- [[file:./doc/vignettes/fixed-tree-without-rho/README.org][Fixed tree without \(\rho\)-sample]]
- [[file:./doc/vignettes/estimated-tree-without-rho/README.org][Estimated tree without \(\rho\)-sample]]

* Beauti

There is a partial template for Beauti in =templates/TimTam.xml=. At the moment
you still need to specify the occurrence times manually in the XML generated
because it is unclear how best to do this via Beauti.

* Classes

Here is a description of the classes that are provided by the package.

** =beast.evolution.speciation=

*** =TimTam=

This class extends the =TreeDistribution= and implements the tree prior.

*** =TimTamLogger=

This class implements =Loggable= and is used to record the prevalence at each
MCMC step.

** =beast.evolution.tree.birthdeath=

*** =EventType=

This class describes the kinds of events that can be observed under the TimTam
likelihood.

*** =BackwardsPointProcess= and =BackwardsSchedule=

These classes are really just aliases to =RealParameter= as a way to make their
meaning clearer. The =BackwardsPointProcess= stores the occurrence times and the
=BackwardsSchedule= is used to indicate when there was a scheduled sample.

*** =TreeWithBackwardsPointProcess=

This class extends the =CalculationNode= and provides functionality for computing
the times between observed events. This requires a tree, the origin time and a
=TraitSet= which is what we use to describe unsequenced observations.

* Structure

Figure [[example-dag]] shows an example of how the classes provided by the package
fit together to define an analysis. The =RootLength= is really a =RealParameter= but
this has not been given its own class yet.

#+name: example-dag
#+attr_org: :width 500
[[./example-dag.png]]
